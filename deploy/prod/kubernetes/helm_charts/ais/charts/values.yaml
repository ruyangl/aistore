# Default values for ais (proxy and target).
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# AIS Image, common between Target and Proxy

#
# XXX TODO The hostPath value spread around under /etc/ais should
# be rationalized:
#
#   - under a single directory tree, for ease of management
#   - not in a standard host OS location such as /etc, but it must be persistent across reboot
#   - unique per helm application name instance, ideally, so that we can run more than one
#     helm application instance per k8s cluster (this would go a long way towards solving
#     the management of this persistent state across helm install/delete cycles)
#   - secure, /tmp/ is an uncontrolled channel into the container
#

image:
  repository: quay.io/nvidia/ais_k8s
  tag: stable
  pullPolicy: IfNotPresent
  dockerRepoToken: ""
  initContainers:
    repository: quay.io/nvidia/kubectl
    tag: latest
common_config:
  dir: /etc/ais
  cloudprovider: aws
  cloud_buckets: cloud
  local_buckets: local
  clusterIP_gw_label: shared
  mirror:
    util_tresh: 0
    enabled: false
  log:
    dir: /var/log/ais
    level : 3
  periodic:
    iostat_time: "2s"
  auth:
    secret        : aBitLongSecretKey
    enabled       : false
    creddir       : ""
  container_capabilities:
    # Needed for debug if you wish to run delve within a pod (or look into kubesquash etc)
    #- SYS_PTRACE


proxy:
  name : "proxy"      # A component label for selector
  gw_label: "shared"  # shared means in proxy clusterIP service
  config:
    proxy:
      non_electable : false
      discovery_url : ""
    test_fspaths:
      count         : 0
      instance      : 0
    net:
      ipv4          : ""
      l4_port       : 8080
      ipv4_intra_control: ""
      ipv4_intra_data: ""
      l4_port_intra_control: ""
      l4_port_intra_data: ""
      http:
        use_https   : false
  service:
    type: ClusterIP
    port: 8080
  nodeSelector:
    key: ais-proxy-type 
    value: "electable"
  # Apply the below node label on any node (just 1), the proxy runs on that node will become a primary at launch
  initialPrimaryProxyNodeLabel:
    name: "initial_primary_proxy"
    value: "yes"
  # The path of the environment file to be passed into the ais container
  envMountPath:
    hostPath: /tmp/
    podPath:  /var/ais_env
  etcMountPath:
    hostPath: /etc/ais/proxy
    # No pod path as it should be the same as config.dir

ne_proxy:
  name : "ne_proxy"    # A component label for selector
  gw_label: "shared"   # shared means in proxy clusterIP service
  config:
    proxy:
      non_electable : true
      discovery_url : ""
    test_fspaths:
      count         : 0
      instance      : 0
    net:
      ipv4          : ""
      l4_port       : 8080
      ipv4_intra_control: ""
      ipv4_intra_data: ""
      l4_port_intra_control: ""
      l4_port_intra_data: ""
      http:
        use_https   : false
  service:
    type: ClusterIP
    port: 8080      # must match that of proxy since they go behind same clusterIP service
  nodeSelector:
    key: ais-proxy-type 
    value: "nonelectable"
  # The path of the environment file to be passed into the ais container
  envMountPath:
    hostPath: /tmp/
    podPath:  /var/ais_env
  etcMountPath:
    hostPath: /etc/ais/proxy


target:
  name : "target"   # A component label for selector
  config:
    proxy:  
      non_electable : false
      discovery_url : ""
    test_fspaths:
      count         : 0
      instance      : 0
    net:
      ipv4          : ""
      l4_port       : 8081
      ipv4_intra_control: ""
      ipv4_intra_data: ""
      l4_port_intra_control: ""
      l4_port_intra_data: ""
      http:
        use_https   : false
  service:
    port: 8081
  nodeSelector:
    key: ais-target-node 
    value: "yes"
  etcMountPath:
    hostPath: /etc/ais/target
    # No pod path as it should be the same as config.dir
  envMountPath:
    hostPath: /tmp/
    podPath:  /var/ais_env
  mountPaths:
    #- /tmp
    - /ais/sda
    - /ais/sdb
    - /ais/sdc
    - /ais/sdd
    - /ais/sde
    - /ais/sdf
    - /ais/sdg
    - /ais/sdh
    - /ais/sdi
    - /ais/sdj
    
ingress: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi


tolerations: []

# Make sure the DFC target only deploy to the node that are marked with a label that signify a hi-perf
# storage
# target-node-key-name : target-node
affinity: {}
#affinity:
#  requiredDuringSchedulingIgnoredDuringExecution:
#    nodeSelectorTerms:
#    - matchExpressions:
#        - key: beta.kubernetes.io/instance-type
#          operator: In
#          values:
#            - d1.8xlarge

#
# If you have an existing graphite installation then set the following
# tag to false and supply the host (or IP) and port for graphite in
# map external_monitoring.
#
tags:
  builtin_monitoring: true


#
# Alternatively, leave the builtin-monitoring tag true (the default) and
# we'll use subchart dependencies to deploy graphite and grafana within the k8s
# cluster.
#
# If data persistence is enabled for Graphite and Grafana then local storage
# must already have been assigned on the indicated node and path combinations
# below - we don't create the underlying storage here, we're just creating a PV
# from existing local storage to satisfy the PVC made from graphite and grafana.
#
# XXX TODO:
#
#   - would be nice to add some standard dashboards; do this via another sidecar
#

#
# Key paths here that match those of https://github.com/kiwigrid/helm-charts/tree/master/charts/graphite
# will over-ride default values in the graphite dependency. Local additions are all within the ais map.
#
graphite:
  persistence:
    enabled: true
    existingClaim: graphite-pvc
  ais:
    pv:
      capacity: "250Gi"
      path: ""
      node: ""

#
# Key paths here that match those of https://github.com/helm/charts/tree/master/stable/grafana
# will over-ride default values in the grafana dependency. Local additions are all within the ais map.
#
grafana:
  persistence:
    enabled: true
    existingClaim: grafana-pvc
  ais:
    pv:
      capacity: "250Gi"
      path: ""
      node: ""
  service:
    type: NodePort
  sidecar:
    datasources:
      enabled: true
      label: ais_grafana_datasource
    dashboards:
      enabled: false
      label: ais_grafana_dashboard


#
# Used only if builtin_monitoring is over-ridden to false
#
external_monitoring:
  graphite_host: somehost
  graphite_port: 2003

pre_install_hook:
  etcMountPath:
    hostPath: /etc/ais 
 

